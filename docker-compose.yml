version: '3.8'

services:
  frontend_api:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER=frontend_user
      - POSTGRES_PASSWORD=frontend_password
      - POSTGRES_SERVER=frontend_db
      - POSTGRES_DB=frontend_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - PYTHONPATH=/app
    depends_on:
      rabbitmq:
        condition: service_healthy
      frontend_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - ./frontend_api:/app
      - ./shared:/app/shared
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  admin_api:
    build:
      context: .
      dockerfile: docker/admin/Dockerfile
    ports:
      - "8001:8000"
    environment:
      - POSTGRES_USER=admin_user
      - POSTGRES_PASSWORD=admin_password
      - POSTGRES_SERVER=admin_db
      - POSTGRES_DB=admin_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - PYTHONPATH=/app
    depends_on:
      rabbitmq:
        condition: service_healthy
      admin_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - ./admin_api:/app
      - ./shared:/app/shared
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend_db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=frontend_user
      - POSTGRES_PASSWORD=frontend_password
      - POSTGRES_DB=frontend_db
    ports:
      - "5432:5432"
    volumes:
      - frontend_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U frontend_user -d frontend_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - backend

  admin_db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=admin_user
      - POSTGRES_PASSWORD=admin_password
      - POSTGRES_DB=admin_db
    ports:
      - "5433:5432"
    volumes:
      - admin_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin_user -d admin_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - backend

volumes:
  frontend_db_data:
  admin_db_data:

networks:
  backend:
    driver: bridge
